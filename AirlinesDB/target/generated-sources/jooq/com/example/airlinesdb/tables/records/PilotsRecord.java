/*
 * This file is generated by jOOQ.
 */
package com.example.airlinesdb.tables.records;


import com.example.airlinesdb.tables.Pilots;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PilotsRecord extends TableRecordImpl<PilotsRecord> implements Record4<Integer, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.PILOTS.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.PILOTS.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.PILOTS.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.PILOTS.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.PILOTS.FLIGHT_HOURS</code>.
     */
    public void setFlightHours(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.PILOTS.FLIGHT_HOURS</code>.
     */
    public Integer getFlightHours() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PUBLIC.PILOTS.AIRPLANE_ID</code>.
     */
    public void setAirplaneId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.PILOTS.AIRPLANE_ID</code>.
     */
    public Integer getAirplaneId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Pilots.PILOTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Pilots.PILOTS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Pilots.PILOTS.FLIGHT_HOURS;
    }

    @Override
    public Field<Integer> field4() {
        return Pilots.PILOTS.AIRPLANE_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getFlightHours();
    }

    @Override
    public Integer component4() {
        return getAirplaneId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getFlightHours();
    }

    @Override
    public Integer value4() {
        return getAirplaneId();
    }

    @Override
    public PilotsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PilotsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PilotsRecord value3(Integer value) {
        setFlightHours(value);
        return this;
    }

    @Override
    public PilotsRecord value4(Integer value) {
        setAirplaneId(value);
        return this;
    }

    @Override
    public PilotsRecord values(Integer value1, String value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PilotsRecord
     */
    public PilotsRecord() {
        super(Pilots.PILOTS);
    }

    /**
     * Create a detached, initialised PilotsRecord
     */
    public PilotsRecord(Integer id, String name, Integer flightHours, Integer airplaneId) {
        super(Pilots.PILOTS);

        setId(id);
        setName(name);
        setFlightHours(flightHours);
        setAirplaneId(airplaneId);
    }
}
